// Code generated by go-swagger; DO NOT EDIT.

package permission

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/turnkeyca/monolith/integration/models"
)

// GetPermissionReader is a Reader for the GetPermission structure.
type GetPermissionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPermissionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPermissionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetPermissionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPermissionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPermissionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPermissionOK creates a GetPermissionOK with default headers values
func NewGetPermissionOK() *GetPermissionOK {
	return &GetPermissionOK{}
}

/* GetPermissionOK describes a response with status code 200, with default header values.

A permission
*/
type GetPermissionOK struct {
	Payload *models.PermissionDto
}

func (o *GetPermissionOK) Error() string {
	return fmt.Sprintf("[GET /v1/permission/{id}][%d] getPermissionOK  %+v", 200, o.Payload)
}
func (o *GetPermissionOK) GetPayload() *models.PermissionDto {
	return o.Payload
}

func (o *GetPermissionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PermissionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPermissionForbidden creates a GetPermissionForbidden with default headers values
func NewGetPermissionForbidden() *GetPermissionForbidden {
	return &GetPermissionForbidden{}
}

/* GetPermissionForbidden describes a response with status code 403, with default header values.

Generic error message returned as a string
*/
type GetPermissionForbidden struct {
	Payload models.GenericError
}

func (o *GetPermissionForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/permission/{id}][%d] getPermissionForbidden  %+v", 403, o.Payload)
}
func (o *GetPermissionForbidden) GetPayload() models.GenericError {
	return o.Payload
}

func (o *GetPermissionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPermissionNotFound creates a GetPermissionNotFound with default headers values
func NewGetPermissionNotFound() *GetPermissionNotFound {
	return &GetPermissionNotFound{}
}

/* GetPermissionNotFound describes a response with status code 404, with default header values.

Generic error message returned as a string
*/
type GetPermissionNotFound struct {
	Payload models.GenericError
}

func (o *GetPermissionNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/permission/{id}][%d] getPermissionNotFound  %+v", 404, o.Payload)
}
func (o *GetPermissionNotFound) GetPayload() models.GenericError {
	return o.Payload
}

func (o *GetPermissionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPermissionInternalServerError creates a GetPermissionInternalServerError with default headers values
func NewGetPermissionInternalServerError() *GetPermissionInternalServerError {
	return &GetPermissionInternalServerError{}
}

/* GetPermissionInternalServerError describes a response with status code 500, with default header values.

Generic error message returned as a string
*/
type GetPermissionInternalServerError struct {
	Payload models.GenericError
}

func (o *GetPermissionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/permission/{id}][%d] getPermissionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetPermissionInternalServerError) GetPayload() models.GenericError {
	return o.Payload
}

func (o *GetPermissionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
