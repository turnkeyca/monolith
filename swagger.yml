basePath: /
consumes:
- application/json
definitions:
  EmploymentDto:
    description: EmploymentDto EmploymentDto employment dto
    properties:
      additionalDetails:
        description: additional details
        type: string
        x-go-name: AdditionalDetails
      annualSalary:
        description: annual salary
        format: double
        type: number
        x-go-name: AnnualSalary
      createdOn:
        description: created on
        type: string
        x-go-name: CreatedOn
      duration:
        description: duration
        type: string
        x-go-name: Duration
      employer:
        description: employer
        type: string
        x-go-name: Employer
      id:
        description: Id
        type: string
        x-go-name: ID
      lastUpdated:
        description: last updated
        type: string
        x-go-name: LastUpdated
      occupation:
        description: occupation
        type: string
        x-go-name: Occupation
      rentAffordability:
        description: rent affordability
        type: string
        x-go-name: RentAffordability
      userId:
        description: user Id
        type: string
        x-go-name: UserID
    type: object
    x-go-package: github.com/turnkeyca/monolith/integration/models
  GenericError:
    description: GenericError GenericError generic error
    type: string
    x-go-package: github.com/turnkeyca/monolith/integration/models
  PermissionDto:
    description: PermissionDto PermissionDto permission dto
    properties:
      createdOn:
        description: created on
        type: string
        x-go-name: CreatedOn
      id:
        description: Id
        type: string
        x-go-name: ID
      lastUpdated:
        description: last updated
        type: string
        x-go-name: LastUpdated
      onUserId:
        description: on user Id
        type: string
        x-go-name: OnUserID
      permission:
        $ref: '#/definitions/PermissionType'
      userId:
        description: user Id
        type: string
        x-go-name: UserID
    type: object
    x-go-package: github.com/turnkeyca/monolith/integration/models
  PermissionType:
    description: PermissionType PermissionType permission type
    type: string
    x-go-package: github.com/turnkeyca/monolith/integration/models
  PetDto:
    description: PetDto PetDto pet dto
    properties:
      breed:
        description: breed
        type: string
        x-go-name: Breed
      createdOn:
        description: created on
        type: string
        x-go-name: CreatedOn
      id:
        description: Id
        type: string
        x-go-name: ID
      lastUpdated:
        description: last updated
        type: string
        x-go-name: LastUpdated
      petType:
        description: pet type
        type: string
        x-go-name: PetType
      sizeType:
        description: size type
        type: string
        x-go-name: SizeType
      userId:
        description: user Id
        type: string
        x-go-name: UserID
    type: object
    x-go-package: github.com/turnkeyca/monolith/integration/models
  ReferenceDto:
    description: ReferenceDto ReferenceDto reference dto
    properties:
      additionalDetails:
        description: additional details
        type: string
        x-go-name: AdditionalDetails
      createdOn:
        description: created on
        type: string
        x-go-name: CreatedOn
      email:
        description: email
        type: string
        x-go-name: Email
      fullName:
        description: full name
        type: string
        x-go-name: FullName
      id:
        description: Id
        type: string
        x-go-name: ID
      lastUpdated:
        description: last updated
        type: string
        x-go-name: LastUpdated
      phoneNumber:
        description: phone number
        type: string
        x-go-name: PhoneNumber
      relationship:
        description: relationship
        type: string
        x-go-name: Relationship
      userId:
        description: user Id
        type: string
        x-go-name: UserID
    type: object
    x-go-package: github.com/turnkeyca/monolith/integration/models
  RegisterTokenDto:
    description: RegisterTokenDto RegisterTokenDto register token dto
    properties:
      id:
        description: login Id
        type: string
        x-go-name: LoginID
      newUser:
        description: is new user
        type: boolean
        x-go-name: IsNewUser
      secret:
        description: secret
        type: string
        x-go-name: Secret
    type: object
    x-go-package: github.com/turnkeyca/monolith/integration/models
  RoommateDto:
    description: RoommateDto RoommateDto roommate dto
    properties:
      createdOn:
        description: created on
        type: string
        x-go-name: CreatedOn
      email:
        description: email
        type: string
        x-go-name: Email
      fullName:
        description: full name
        type: string
        x-go-name: FullName
      id:
        description: Id
        type: string
        x-go-name: ID
      lastUpdated:
        description: last updated
        type: string
        x-go-name: LastUpdated
      userId:
        description: user Id
        type: string
        x-go-name: UserID
    type: object
    x-go-package: github.com/turnkeyca/monolith/integration/models
  ShortURLDto:
    description: ShortURLDto ShortURLDto short Url dto
    properties:
      url:
        description: Url
        type: string
        x-go-name: URL
    type: object
    x-go-package: github.com/turnkeyca/monolith/integration/models
  ShortUrlDto:
    properties:
      url:
        type: string
        x-go-name: Url
    type: object
    x-go-package: github.com/turnkeyca/monolith/shorturl
  TokenDto:
    description: TokenDto TokenDto token dto
    properties:
      id:
        description: Id
        type: string
        x-go-name: ID
      token:
        description: token
        type: string
        x-go-name: Token
    type: object
    x-go-package: github.com/turnkeyca/monolith/integration/models
  UserDto:
    description: UserDto UserDto user dto
    properties:
      acceptedTerms:
        description: accepted terms
        type: boolean
        x-go-name: AcceptedTerms
      additionalDetailsGeneral:
        description: additional details general
        type: string
        x-go-name: AdditionalDetailsGeneral
      additionalDetailsLease:
        description: additional details lease
        type: string
        x-go-name: AdditionalDetailsLease
      bio:
        description: bio
        type: string
        x-go-name: Bio
      createdOn:
        description: created on
        type: string
        x-go-name: CreatedOn
      creditCheck:
        description: can credit check
        type: boolean
        x-go-name: CanCreditCheck
      email:
        description: email
        type: string
        x-go-name: Email
      evicted:
        description: has previous eviction
        type: boolean
        x-go-name: HasPreviousEviction
      fullName:
        description: full name
        type: string
        x-go-name: FullName
      id:
        description: Id
        type: string
        x-go-name: ID
      lastUpdated:
        description: last updated
        type: string
        x-go-name: LastUpdated
      lawsuit:
        description: has previous lawsuit
        type: boolean
        x-go-name: HasPreviousLawsuit
      loginId:
        description: login Id
        type: string
        x-go-name: LoginID
      moveInDate:
        description: move in date
        type: string
        x-go-name: MoveInDate
      moveOutDate:
        description: move out date
        type: string
        x-go-name: MoveOutDate
      movingReason:
        description: moving reason
        type: string
        x-go-name: MovingReason
      nickname:
        description: nickname
        type: string
        x-go-name: Nickname
      pets:
        description: has pets
        type: boolean
        x-go-name: HasPets
      phoneNumber:
        description: phone number
        type: string
        x-go-name: PhoneNumber
      roommates:
        description: has roommates
        type: boolean
        x-go-name: HasRoommates
      securityDeposit:
        description: has security deposit
        type: boolean
        x-go-name: HasSecurityDeposit
      sendNotifications:
        description: send notifications
        type: boolean
        x-go-name: SendNotifications
      smoker:
        description: is smoker
        type: boolean
        x-go-name: IsSmoker
      userStatusType:
        $ref: '#/definitions/UserStatusType'
      userType:
        $ref: '#/definitions/UserType'
      walkthroughComplete:
        description: walkthrough complete
        type: boolean
        x-go-name: WalkthroughComplete
    type: object
    x-go-package: github.com/turnkeyca/monolith/integration/models
  UserStatusType:
    description: UserStatusType UserStatusType user status type
    type: string
    x-go-package: github.com/turnkeyca/monolith/integration/models
  UserType:
    description: UserType UserType user type
    type: string
    x-go-package: github.com/turnkeyca/monolith/integration/models
info:
  description: Documentation for Turnkey API
  title: of Turnkey API
  version: 1.0.0
paths:
  /v1/auth/registertoken:
    post:
      description: register token
      operationId: registerNewToken
      parameters:
      - in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/RegisterTokenDto'
      responses:
        "200":
          $ref: '#/responses/tokenResponse'
        "500":
          $ref: '#/responses/authenticationErrorResponse'
      tags:
      - authentication
  /v1/employment:
    get:
      description: return employments for a user
      operationId: getEmploymentsByUserId
      parameters:
      - description: The user id
        in: query
        name: userId
        required: true
        type: string
        x-go-name: UserId
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/employmentsResponse'
        "403":
          $ref: '#/responses/employmentErrorResponse'
        "500":
          $ref: '#/responses/employmentErrorResponse'
      tags:
      - employment
    post:
      description: create a new employment
      operationId: createEmployment
      parameters:
      - in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/EmploymentDto'
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "400":
          $ref: '#/responses/employmentErrorResponse'
        "403":
          $ref: '#/responses/employmentErrorResponse'
        "422":
          $ref: '#/responses/employmentErrorResponse'
        "500":
          $ref: '#/responses/employmentErrorResponse'
      tags:
      - employment
  /v1/employment/{id}:
    delete:
      description: delete a employment
      operationId: deleteEmployment
      parameters:
      - description: The id of the employment for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "403":
          $ref: '#/responses/employmentErrorResponse'
        "500":
          $ref: '#/responses/employmentErrorResponse'
      tags:
      - employment
    get:
      description: return an employment
      operationId: getEmployment
      parameters:
      - description: The id of the employment for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/employmentResponse'
        "403":
          $ref: '#/responses/employmentErrorResponse'
        "500":
          $ref: '#/responses/employmentErrorResponse'
      tags:
      - employment
    put:
      description: update a employment
      operationId: updateEmployment
      parameters:
      - description: The id of the employment for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/EmploymentDto'
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "400":
          $ref: '#/responses/employmentErrorResponse'
        "403":
          $ref: '#/responses/employmentErrorResponse'
        "422":
          $ref: '#/responses/employmentErrorResponse'
        "500":
          $ref: '#/responses/employmentErrorResponse'
      tags:
      - employment
  /v1/permission:
    get:
      description: return all permissions for a user
      operationId: getPermissionsByUserId
      parameters:
      - description: The user id
        in: query
        name: userId
        required: true
        type: string
        x-go-name: UserId
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/permissionsResponse'
        "403":
          $ref: '#/responses/permissionErrorResponse'
        "500":
          $ref: '#/responses/permissionErrorResponse'
      tags:
      - permission
    post:
      description: create a new permission
      operationId: createPermission
      parameters:
      - in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/PermissionDto'
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "400":
          $ref: '#/responses/permissionErrorResponse'
        "403":
          $ref: '#/responses/permissionErrorResponse'
        "422":
          $ref: '#/responses/permissionErrorResponse'
        "500":
          $ref: '#/responses/permissionErrorResponse'
      tags:
      - permission
  /v1/permission/{id}:
    delete:
      description: delete a permission
      operationId: deletePermission
      parameters:
      - description: The id of the permission for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "403":
          $ref: '#/responses/permissionErrorResponse'
        "409":
          $ref: '#/responses/permissionErrorResponse'
        "500":
          $ref: '#/responses/permissionErrorResponse'
      tags:
      - permission
    get:
      description: return a permission
      operationId: getPermission
      parameters:
      - description: The id of the permission for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/permissionResponse'
        "403":
          $ref: '#/responses/permissionErrorResponse'
        "404":
          $ref: '#/responses/permissionErrorResponse'
        "500":
          $ref: '#/responses/permissionErrorResponse'
      tags:
      - permission
  /v1/permission/{id}/accept:
    post:
      description: accept a permission
      operationId: acceptPermission
      parameters:
      - description: The id of the permission for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "403":
          $ref: '#/responses/permissionErrorResponse'
        "500":
          $ref: '#/responses/permissionErrorResponse'
      tags:
      - permission
  /v1/pet:
    get:
      description: return all pets for a user
      operationId: getPetsByUserId
      parameters:
      - description: The user id
        in: query
        name: userId
        required: true
        type: string
        x-go-name: UserId
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/petsResponse'
        "403":
          $ref: '#/responses/petErrorResponse'
        "500":
          $ref: '#/responses/petErrorResponse'
      tags:
      - pet
    post:
      description: create a new pet
      operationId: createPet
      parameters:
      - in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/PetDto'
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "400":
          $ref: '#/responses/petErrorResponse'
        "403":
          $ref: '#/responses/petErrorResponse'
        "422":
          $ref: '#/responses/petErrorResponse'
        "500":
          $ref: '#/responses/petErrorResponse'
      tags:
      - pet
  /v1/pet/{id}:
    delete:
      description: delete a pet
      operationId: deletePet
      parameters:
      - description: The id of the pet for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "403":
          $ref: '#/responses/petErrorResponse'
        "500":
          $ref: '#/responses/petErrorResponse'
      tags:
      - pet
    get:
      description: return a pet
      operationId: getPet
      parameters:
      - description: The id of the pet for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/petResponse'
        "403":
          $ref: '#/responses/petErrorResponse'
        "404":
          $ref: '#/responses/petErrorResponse'
        "500":
          $ref: '#/responses/petErrorResponse'
      tags:
      - pet
    put:
      description: update a pet
      operationId: updatePet
      parameters:
      - description: The id of the pet for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/PetDto'
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "400":
          $ref: '#/responses/petErrorResponse'
        "403":
          $ref: '#/responses/petErrorResponse'
        "422":
          $ref: '#/responses/petErrorResponse'
        "500":
          $ref: '#/responses/petErrorResponse'
      tags:
      - pet
  /v1/reference:
    get:
      description: return all references for a user
      operationId: getReferencesByUserId
      parameters:
      - description: The user id
        in: query
        name: userId
        required: true
        type: string
        x-go-name: UserId
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/referencesResponse'
        "403":
          $ref: '#/responses/referenceErrorResponse'
        "500":
          $ref: '#/responses/referenceErrorResponse'
      tags:
      - reference
    post:
      description: create a new reference
      operationId: createReference
      parameters:
      - in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/ReferenceDto'
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "400":
          $ref: '#/responses/referenceErrorResponse'
        "403":
          $ref: '#/responses/referenceErrorResponse'
        "422":
          $ref: '#/responses/referenceErrorResponse'
        "500":
          $ref: '#/responses/referenceErrorResponse'
      tags:
      - reference
  /v1/reference/{id}:
    delete:
      description: delete a reference
      operationId: deleteReference
      parameters:
      - description: The id of the reference for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "403":
          $ref: '#/responses/referenceErrorResponse'
        "500":
          $ref: '#/responses/referenceErrorResponse'
      tags:
      - reference
    get:
      description: return a reference
      operationId: getReference
      parameters:
      - description: The id of the reference for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/referenceResponse'
        "403":
          $ref: '#/responses/referenceErrorResponse'
        "404":
          $ref: '#/responses/referenceErrorResponse'
        "500":
          $ref: '#/responses/referenceErrorResponse'
      tags:
      - reference
    put:
      description: update a reference
      operationId: updateReference
      parameters:
      - description: The id of the reference for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/ReferenceDto'
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "400":
          $ref: '#/responses/referenceErrorResponse'
        "403":
          $ref: '#/responses/referenceErrorResponse'
        "422":
          $ref: '#/responses/referenceErrorResponse'
        "500":
          $ref: '#/responses/referenceErrorResponse'
      tags:
      - reference
  /v1/roommate:
    get:
      description: return all roommates for a user
      operationId: getRoommatesByUserId
      parameters:
      - description: The user id
        in: query
        name: userId
        required: true
        type: string
        x-go-name: UserId
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/roommatesResponse'
        "403":
          $ref: '#/responses/roommateErrorResponse'
        "500":
          $ref: '#/responses/roommateErrorResponse'
      tags:
      - roommate
    post:
      description: create a new roommate
      operationId: createRoommate
      parameters:
      - in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/RoommateDto'
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "400":
          $ref: '#/responses/roommateErrorResponse'
        "403":
          $ref: '#/responses/roommateErrorResponse'
        "422":
          $ref: '#/responses/roommateErrorResponse'
        "500":
          $ref: '#/responses/roommateErrorResponse'
      tags:
      - roommate
  /v1/roommate/{id}:
    delete:
      description: delete a roommate
      operationId: deleteRoommate
      parameters:
      - description: The id of the roommate for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "403":
          $ref: '#/responses/roommateErrorResponse'
        "500":
          $ref: '#/responses/roommateErrorResponse'
      tags:
      - roommate
    get:
      description: return a roommate
      operationId: getRoommate
      parameters:
      - description: The id of the roommate for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/roommateResponse'
        "403":
          $ref: '#/responses/roommateErrorResponse'
        "404":
          $ref: '#/responses/roommateErrorResponse'
        "500":
          $ref: '#/responses/roommateErrorResponse'
      tags:
      - roommate
    put:
      description: update a roommate
      operationId: updateRoommate
      parameters:
      - description: The id of the roommate for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/RoommateDto'
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "400":
          $ref: '#/responses/roommateErrorResponse'
        "403":
          $ref: '#/responses/roommateErrorResponse'
        "404":
          $ref: '#/responses/roommateErrorResponse'
        "422":
          $ref: '#/responses/roommateErrorResponse'
        "500":
          $ref: '#/responses/roommateErrorResponse'
      tags:
      - roommate
  /v1/shorturl:
    get:
      description: return a bitly short url
      operationId: getShortUrl
      parameters:
      - description: The url to be converted
        in: query
        name: url
        required: true
        type: string
        x-go-name: Url
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/shortUrlResponse'
        "500":
          $ref: '#/responses/shortUrlErrorResponse'
      tags:
      - shorturl
  /v1/user/{id}:
    delete:
      description: delete a user
      operationId: deleteUser
      parameters:
      - description: The id of the user for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "403":
          $ref: '#/responses/roommateErrorResponse'
        "500":
          $ref: '#/responses/userErrorResponse'
      tags:
      - user
    get:
      description: return a user
      operationId: getUser
      parameters:
      - description: The id of the user for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/userResponse'
        "403":
          $ref: '#/responses/userErrorResponse'
        "500":
          $ref: '#/responses/userErrorResponse'
      tags:
      - user
    put:
      description: update a user
      operationId: updateUser
      parameters:
      - description: The id of the user for which the operation relates
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/UserDto'
      - in: header
        name: Token
        required: true
        type: string
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "400":
          $ref: '#/responses/userErrorResponse'
        "403":
          $ref: '#/responses/userErrorResponse'
        "422":
          $ref: '#/responses/userErrorResponse'
        "500":
          $ref: '#/responses/userErrorResponse'
      tags:
      - user
produces:
- application/json
responses:
  authenticationErrorResponse:
    description: Generic error message returned as a string
    schema:
      $ref: '#/definitions/GenericError'
  employmentErrorResponse:
    description: Generic error message returned as a string
    schema:
      $ref: '#/definitions/GenericError'
  employmentResponse:
    description: A employment
    schema:
      $ref: '#/definitions/EmploymentDto'
  employmentsResponse:
    description: A list of employment
    schema:
      items:
        $ref: '#/definitions/EmploymentDto'
      type: array
  noContentResponse:
    description: No content is returned by this API endpoint
  permissionErrorResponse:
    description: Generic error message returned as a string
    schema:
      $ref: '#/definitions/GenericError'
  permissionResponse:
    description: A permission
    schema:
      $ref: '#/definitions/PermissionDto'
  permissionsResponse:
    description: A list of permissions
    schema:
      items:
        $ref: '#/definitions/PermissionDto'
      type: array
  petErrorResponse:
    description: Generic error message returned as a string
    schema:
      $ref: '#/definitions/GenericError'
  petResponse:
    description: A pet
    schema:
      $ref: '#/definitions/PetDto'
  petsResponse:
    description: A list of pets
    schema:
      items:
        $ref: '#/definitions/PetDto'
      type: array
  referenceErrorResponse:
    description: Generic error message returned as a string
    schema:
      $ref: '#/definitions/GenericError'
  referenceResponse:
    description: A reference
    schema:
      $ref: '#/definitions/ReferenceDto'
  referencesResponse:
    description: A list of references
    schema:
      items:
        $ref: '#/definitions/ReferenceDto'
      type: array
  roommateErrorResponse:
    description: Generic error message returned as a string
    schema:
      $ref: '#/definitions/GenericError'
  roommateResponse:
    description: A roommate
    schema:
      $ref: '#/definitions/RoommateDto'
  roommatesResponse:
    description: A list of roommates
    schema:
      items:
        $ref: '#/definitions/RoommateDto'
      type: array
  shortUrlErrorResponse:
    description: Generic error message returned as a string
    schema:
      $ref: '#/definitions/GenericError'
  shortUrlResponse:
    description: A short url
    schema:
      $ref: '#/definitions/ShortUrlDto'
  tokenResponse:
    description: new user id
    schema:
      $ref: '#/definitions/TokenDto'
  userErrorResponse:
    description: Generic error message returned as a string
    schema:
      $ref: '#/definitions/GenericError'
  userResponse:
    description: A user
    schema:
      $ref: '#/definitions/UserDto'
schemes:
- http
swagger: "2.0"
